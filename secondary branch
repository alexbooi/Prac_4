#!/usr/bin/python
import RPi.GPIO as GPIO
import Adafruit_MCP3008
import spidev
import time
from time import gmtime, strftime
import sys
import os
# Open SPI bus
spi = spidev.SpiDev() # create spi object
spi.open(0,0) # initialise SPI

GPIO.setmode(GPIO.BCM)
# pin definition
SPICLK = 24
SPIMISO = 23
SPIMOSI = 18
SPICS = 15
RESET=17
FREQ=27 
STOP=22
DISP=5

global X
X =0.5
global T
T=time.time()
global values
values = ['']*5
global Matrix
Matrix = [[0 for x in range(5)] for y in range(5)]
global F
F=0.5 

GPIO.setup(SPIMOSI, GPIO.OUT)
GPIO.setup(SPIMISO, GPIO.IN)
GPIO.setup(SPICLK, GPIO.OUT)
GPIO.setup(SPICS, GPIO.OUT)
GPIO.setup(RESET, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
GPIO.setup(FREQ, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
GPIO.setup(STOP, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
GPIO.setup(DISP, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
GPIO.setwarnings(False)

mcp = Adafruit_MCP3008.MCP3008(clk=SPICLK, cs=SPICS, mosi=SPIMOSI,miso=SPIMISO)
spi.max_speed_hz=1000000

def reset (channel):
        #reset buttton
        print("Reset")
        global T
        T=time.time()
        os.system('clear')
        
def freq (channel):
        #freq buttton
        print("Freq")
        global F
        F=F*2
        if F>2:
                F=0.5
        
def stop (channel):
        #stop buttton
        #print("Stop")
        for x in range(5):
                global T
                y=time.time()
                n=time.time()
                k=n-T
                global Matrix
                Matrix[x][0]=strftime(("%H:%M:%S"),gmtime(y))
                global Matrix
                Matrix[x][1]=strftime(("%H:%M:%S"),gmtime(k))
                global Matrix
                Matrix[x][2]='%.1f V' %round((((mcp.read_adc(0))*3.3)/1023.0),2)
                global Matrix
                temp = mcp.read_adc(1)/1023.0
                temp = temp*330
		            temp = temp-246
                temp = temp*0.5556
                Matrix[x][3]='%.0f C' %temp
                global Matrix
                Matrix[x][4]='%d%%' %(((mcp.read_adc(2))/1023.0)*100.0)
                global F
                time.sleep(F)
        print("stop")


def disp (channel):
        #disp button
        print("Time\t\tTimer\t\tPot\tTemp\tLight")
        global Matrix
        for x in range(5):
                print (Matrix[x][0]+"\t" +  Matrix[x][1]+"\t"+Matrix[x][2]+"\t"+Matrix[x][3]+"\t"+Matrix[x][4])
        
GPIO.add_event_detect(RESET, GPIO.RISING, bouncetime=300, callback=reset)
GPIO.add_event_detect(FREQ, GPIO.RISING, bouncetime=300, callback=freq)
GPIO.add_event_detect(STOP, GPIO.RISING, bouncetime=300, callback=stop)
GPIO.add_event_detect(DISP, GPIO.RISING, bouncetime=300, callback=disp)

time.sleep(60)

print ("times up my dude")

GPIO.cleanup()
